void loop()
{
ArduinoOTA.handle();

/*–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ Bluetooth, –ø—Ä–∏ –µ–µ –Ω–∞–ª–∏—á–∏–∏. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏ –≤ Terminal –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏*/
if (SerialBT.available()) Terminal(SerialBT.readStringUntil('\n'), B100);

/*–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Telnet*/
if (TelnetServer.hasClient())
{
if(TelnetClient) TelnetClient.stop(); TelnetClient = TelnetServer.available();
TelnetClient.println("> \"" + String (board_name[ROLE]) + "\"");
TelnetClient.println("> IP: " + WiFi.localIP().toString() + "  |  MAC: " +  WiFi.macAddress());
TelnetClient.println("> CPU0: " + StringResetReason(rtc_get_reset_reason(0)));
TelnetClient.println("> CPU1: " + StringResetReason(rtc_get_reset_reason(1)));
}

/*–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ Telnet, –ø—Ä–∏ –µ–µ –Ω–∞–ª–∏—á–∏–∏. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏ –≤ Terminal –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏*/
if (TelnetClient && TelnetClient.connected() && TelnetClient.available()) {while(TelnetClient.available()) Terminal(TelnetClient.readStringUntil('\n'), B010);}

if (flag_OTA_begin) return;
/*–ü—Ä–∏ –Ω–∞—á–∞–ª–µ OTA –≤—Å–µ, —á—Ç–æ –Ω–∏–∂–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è*/

/*–ü–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —Ü–∏–∫–ª Loop*/
/*–ü–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–µ —á–µ—Ç–Ω—É—é —Å–µ–∫—É–Ω–¥—É*/
if (seconds % 2 == 1 && flag_seconds)
{
flag_seconds = false;
//–ú–∏–≥–∞–µ–º –∫—Ä–∞—Å–Ω—ã–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–º
digitalWrite(LED_RED, HIGH); xTimerStart(timerRed, 10); 
//–ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É Now –¥–∞–Ω–Ω—ã—Ö 
Cycle_A ();
//–ó–∞–ø—É—Å–∫–∞–µ–º –∏–∑–º–µ—Ä–µ–Ω–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤–æ–¥—ã –¥–∞—Ç—á–∏–∫–æ–º DS18B20  
ds18b20.requestTemperatures(); 
//–ï—Å–ª–∏ –¥–∞—Ç—á–∏–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 
if (ds18b20.isConnected(ds18b20_water))  now_Store[ROLE].temp_water  = ds18b20.getTempC(ds18b20_water);
if (ds18b20.isConnected(ds18b20_gas))    now_Store[ROLE].temp_gas    = ds18b20.getTempC(ds18b20_gas);

if        (now_Store[ROLE].temp_gas > temp_gas_old && now_Store[ROLE].temp_gas >= 40.0) string_gas_state = "üî•";
else if   (now_Store[ROLE].temp_gas < temp_gas_old || now_Store[ROLE].temp_gas <  40.0) string_gas_state = "‚òÅ";
temp_gas_old = now_Store[ROLE].temp_gas;

switch (control_mode)
  {
  case 0:
    string_mode_state = "‚úã";
    break;
  case 1:
    string_mode_state = "üÖ∞";
    break;
  case 2:
    if (hours >= hour_down && hours <= hour_up) string_mode_state = String ("üÖ∞ ") + String(hour_up) + "‚Üë"; 
    else string_mode_state = String ("üÖ∞ ") + String(hour_down) + "‚Üì"; 
    break;
  case 3:
    if (hours >= hour_down && hours <= hour_up) string_mode_state = String ("üÖ∞ ") + String(hour_up) + "‚Üë"; 
    else string_mode_state = String ("üÖ∞ ") + String(hour_down) + "‚Üì"; 
    break;
  }
}
/**/



/*–ü–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é —á–µ—Ç–Ω—É—é —Å–µ–∫—É–Ω–¥—É*/
if (seconds % 2 == 0 && flag_seconds)
{  flag_seconds = false;
           
   min_in_day = 60 * hours + minutes;
   if (hours >= 10) string_hours = String (hours); else string_hours = "0" + String (hours);
   if (minutes >= 10) string_minutes = String (minutes); else string_minutes = "0" + String (minutes);
   if (seconds >= 10) string_seconds = String (seconds); else string_seconds = "0" + String (seconds);
   
   if (min_in_day % time_min_control == 0 && flag_time_control)                 //–ï—Å–ª–∏ –ø–æ–¥–æ—à–ª–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞
   {       
      flag_time_control = false;                                                //–°–±—Ä–∞—Å—ã–≤–∞–µ–∏ —Ñ–ª–∞–≥ —Ä–∞–±–æ—Ç—ã —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–µ–Ω—É–∂–Ω—ã—Ö –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
      time_msec_control = xTaskGetTickCount();                                  //–û–±–Ω—É–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç –Ω–∞—á–∞–ª–∞ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è   
      temp_room_old = now_Store[ROLE].temp_room;                                //–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
      
      temp_room_saved [7] = temp_room_saved [6];
      temp_room_saved [6] = temp_room_saved [5];
      temp_room_saved [5] = temp_room_saved [4];
      temp_room_saved [4] = temp_room_saved [3];
      temp_room_saved [3] = temp_room_saved [2];
      temp_room_saved [2] = temp_room_saved [1];
      temp_room_saved [1] = temp_room_saved [0];
      temp_room_saved [0] = temp_room_old;
          
              if (position_int + Situation() > 21) {position_int = 21; string_extreme = " ‚ûï";} //–í—ã–∑—ã–≤–∞–µ–º Situation() –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∞–π–Ω–æ—Å—Ç—å –≤ + –ø–æ–∑–∏—Ü–∏–∏ —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞
        else  if (position_int + Situation() < 1)  {position_int = 1; string_extreme = " ‚ûñ";}  //–í—ã–∑—ã–≤–∞–µ–º Situation() –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∞–π–Ω–æ—Å—Ç—å –≤ - –ø–æ–∑–∏—Ü–∏–∏ —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞
        else     {position_int = position_int + Situation(); string_extreme = "";}              //–í—ã–∑—ã–≤–∞–µ–º Situation() –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç—Å—É—Ç—Å–≤–∏–µ –∫—Ä–∞–π–Ω–æ—Å—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏ —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞
        Position (position_int);                                                                //–í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–≤–æ—Ä–æ—Ç–∞ 
                
   }          
  mqtt_Send ();                        //–û—Ç–ø—Ä–∞–≤–∫–∞ MQTT —Å–æ–æ–±—â–µ–Ω–∏–π
}
/**/


/*–ü–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É*/
if (flag_minutes)
{
  flag_minutes = false;
  WiFiReconnect ();                    //–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WiFi –ø—Ä–∏ –æ–±—Ä—ã–≤–µ —Å–≤—è–∑–∏
  randomSeed(micros());                //–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
  ThingSpeakSend ();                   //–û—Ç–ø—Ä–∞–≤–∫–∞ IFTTT —Å–æ–æ–±—â–µ–Ω–∏–π
}
/**/


/*–ü–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å*/
if (flag_hours)
{
flag_hours = false;

if (hours == hour_down || hours == hour_up)                         
{
  switch (control_mode)
  {
  case 2:
    if      (hours == hour_down) temp_zad = temp_zad - 0.5;
    else if (hours == hour_up)   temp_zad = temp_zad + 0.5;
    break;
  case 3:
    if      (hours == hour_down) temp_zad = temp_zad - 1.0;
    else if (hours == hour_up)   temp_zad = temp_zad + 1.0;
    break;
  }
  memory.putFloat("temp_zad", temp_zad);
  if (flag_notice) IFTTTSend (String(ifttt_event), String(board_name[ROLE]) + " " + String(F("Set temperature")), String(temp_zad, 1), "‚ÑÉ");
}

}
/**/



/*–°–±—Ä–æ—Å —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞*/
xTimerChangePeriod(timerWatchDog,  pdMS_TO_TICKS(Reset_time), 0);  
}
